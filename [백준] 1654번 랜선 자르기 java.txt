import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        int K = in.nextInt(); // 4개의 선이 있고
        int N = in.nextInt(); // 11개의 선을 만들어야 한다.
        int[] arr = new int[K];

        long low = 0, high = 0;

        // 입력과 동시에 해당 랜선의 길이가 최댓값인지를 확인하고 high를 갱신
        for (int i = 0; i < K; i++) {
            arr[i] = in.nextInt();
            if(high < arr[i]) {
                high = arr[i];
            }
        }
        // 반드시 high에서 +1 값이어야 한다.
        high++;

        while (low < high) {
            long mid = (high + low) / 2;
            long count = 0;

            // 구해진 중간 길이로 잘라서 총 몇 개가 만들어지는지를 구한다.
            for (int i = 0; i < arr.length; i++) {
                count += (arr[i] / mid);
            }

            System.out.println(low+","+high+","+mid+","+count);

            /*
             *  [upper bound 형식]
             *  mid길이로 잘랐을 때의 개수가 만들고자 하는 랜선의 개수보다 작다면
             *  자르고자 하는 길이를 줄이기 위해 최대 길이를 줄인다.
             *  그 외에는 자르고자 하는 길이를 늘려야 하므로 최소 길이를 늘린다.
             */
            if(count < N) {
                high = mid;
            }
            else if (count >= N){
                low = mid + 1;
            }
        }
        // UpperBound로 얻어진 값(min)에 -1이 최대 길이가 된다.
        System.out.println(low - 1);
    }
}

결과 출력

4 11
802
743
457
539
0,803,401,5
0,401,200,11
201,401,301,6
201,301,251,8
201,251,226,10
201,226,213,10
201,213,207,10
201,207,204,10
201,204,202,10
201,202,201,10
200