import java.util.Scanner;

public class Main {

    public static int N, M;
    public static int[] arr;
    public static boolean[] visit;

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        N = in.nextInt(); //자연수 입력받기
        M = in.nextInt(); //깊이 입력받기
        arr = new int[M]; //깊이 만큼 배열 생성
        visit = new boolean[N];//자연수가 중복되지않게 방문 표시를 해준다.

        dfs(1, 0);
    }
    public static void dfs(int at, int depth) {
        //phase1
        if (depth == M) {
            for (int val : arr) {
                System.out.print(val + " ");
            }
            System.out.println();
            return;
        }
        //phase2
        for (int i = at; i <= N; i++) {
            if(visit[i-1] != true) { //자연수의 갯수만큼 배열이 존재한다.
                visit[i-1] = true; //visit[0] = true가 됨으로 i가 1일경우는 다음 dfs(i, depth + 1);에 대입될 수 없다.
                arr[depth] = i; //처음자리에는 1 이 들어가고, 다음 자리에 1이 들어올 수 없으므로 2,3,4 가 들어간다.
                                //각각 phase1의 조건에 충족이 되면 출력이 된다.
                dfs(i, depth + 1);
                visit[i-1] = false; //이 false가 없으면 1 2 /1 3 /1 4 가 출력 된 뒤로 2,3,4가 true로 묶이기 때문에 
                //1 2/ 1 3 /1 4만 출력이 되고 끝난다.
            }
        }
    }
}

출력 결과

4
2
1 2 
1 3 
1 4 
2 3 
2 4 
3 4 